from marshmallow import Schema, fields

class Task(Schema):
    uuid = fields.String(required=True, description="Unique identifier (UUID) of the item. This is generated by the server and cannot be changed.")
    task = fields.String(required=True, description="Simple task description")
    status = fields.String(required=True, description="""
Status of the Task. Value can be anything, but suggested are: 'todo', 'in progress', 'done', 'do later', 'cancelled', etc. Put whatever makes most contextual sense here.
""".strip())
    notes = fields.String(required=True, description="Its important to add notes about the task to make this utility more useful! Think about it step by step. Add the context and any additional information. Can be from the user or the AI")

class CreateTaskRequest(Schema):
    task = fields.String(required=True, description="Simple task description. Use other fields to add as many useful details as possible.")
    status = fields.String(required=True, description="Status of the Task. Value can be anything, but suggested are: 'todo', 'in progress', 'done', 'do later', 'cancelled', etc. Put whatever makes most contextual sense here.")
    notes = fields.String(required=True, description="Its important to add notes when creating a task to make this utility more useful! Think about it step by step. Add the context and any additional information. Can be from the user or the AI")

class UpdateTaskRequest(Schema):
    task = fields.String(required=False, description="Task description")
    status = fields.String(required=False, description="Status of the Task")
    notes = fields.String(required=False, description="Freeform notes about the Task")

class SearchRequest(Schema):
    query = fields.String(required=True, description="Search query.")

class SearchResult(Schema):
    title = fields.String(required=True, description="Title of the search result page.")
    url = fields.String(required=True, description="URL of the search result page.")
    body = fields.String(required=True, description="Raw text extarcted from the search result page. Read this carefully to extract good information from this yourself.")

class UrlRequest(Schema):
    url = fields.String(required=True, description="URL of the page to extract information from.")

class UrlResult(Schema):
    body = fields.String(required=True, description="Raw text extracted from the page. Read this carefully to extract good information from this yourself.")

components = [Task, CreateTaskRequest, UpdateTaskRequest, SearchRequest, SearchResult, UrlRequest, UrlResult]
